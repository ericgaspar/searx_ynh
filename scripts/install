#!/bin/bash

#=================================================
# GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE FAILURE OF THE SCRIPT
#=================================================

ynh_clean_setup () {
	ynh_clean_check_starting
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
is_public=$YNH_APP_ARG_IS_PUBLIC

app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THIS ARGS
#=================================================
ynh_script_progression --message="Validating installation parameters..." --weight=1

final_path="/opt/yunohost/$app"
test ! -e "$final_path" || ynh_die --message="This path already contains a folder"

# Register (book) web path
ynh_webpath_register --app=$app --domain=$domain --path_url=$path_url

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_script_progression --message="Storing installation settings..." --weight=2

ynh_app_setting_set --app=$app --key=domain --value=$domain
ynh_app_setting_set --app=$app --key=path --value=$path_url
ynh_app_setting_set --app=$app --key=is_public --value=$is_public

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Installing dependencies..." --weight=35

ynh_install_app_dependencies $pkg_dependencies

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring NGINX web server..."

path_no_root=${path_url%/}
# Create a dedicated NGINX config
ynh_add_nginx_config "path_no_root"

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Configuring system user..." --weight=3

# Create a system user
ynh_system_user_create --username=$app

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..." --weight=2

ynh_app_setting_set --app=$app --key=final_path --value=$final_path
# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$final_path"

#=================================================
# PATCH VERSION 0.16.0
#=================================================

# Apply fix https://github.com/asciimoo/searx/pull/1831 on the current 0.16.0 release.
ynh_replace_string --match_string="werkzeug.contrib.fixers" --replace_string="werkzeug.middleware.proxy_fix" --target_file="$final_path/searx/webapp.py"

#=================================================
# SPECIFIC SETUP
#=================================================
# INSTALL SEARX IN A VIRTUALENV
#=================================================
ynh_script_progression --message="Installing Searx..."

python3 -m venv --system-site-packages "$final_path"
set +u; source $final_path/bin/activate; set -u
pip3 install -U setuptools
pip3 install --requirement $final_path/requirements-ynh.txt

#=================================================
# CONFIGURE SEARX
#=================================================
ynh_script_progression --message="Configuring Searx..." --weight=2

# Change instance name
ynh_replace_string --match_string="instance_name : \"searx\"" --replace_string="instance_name : \"YunoSearx\"" --target_file="$final_path/searx/settings.yml"

# Generate a secret key
ynh_replace_string --match_string="secret_key : \"ultrasecretkey\"" --replace_string="secret_key : \"$(ynh_string_random)\"" --target_file="$final_path/searx/settings.yml"

# Modify the base_url parameter
ynh_replace_string --match_string="base_url : False" --replace_string="base_url : https://${domain}${path_url%/}/" --target_file="$final_path/searx/settings.yml"

ynh_store_file_checksum --file="$final_path/searx/settings.yml"

#=================================================
# SET PERMISSIONS ON SEARX DIRECTORY
#=================================================

chown $app: --recursive "$final_path"

#=================================================
# CONFIGURE UWSGI FOR SEARX
#=================================================
ynh_script_progression --message="Configuring uWSGI for Searx..."

ynh_add_uwsgi_service

#=================================================
# ADVERTISE SERVICE IN ADMIN PANEL
#=================================================

# Ajoute le service au monitoring de Yunohost.
yunohost service add uwsgi --log "/var/log/uwsgi/app/$app.log"

#=================================================
# CHECK SEARX STARTING
#=================================================
ynh_script_progression --message="Starting Searx..." --weight=4

# Wait for searx to be fully started
ynh_systemd_action --service_name=uwsgi-app@$app.service --action=start --line_match="spawned uWSGI master process" --log_path="/var/log/uwsgi/$app/$app.log"

#=================================================
# GENERIC FINALISATION
#=================================================
# SETUP SSOWAT
#=================================================
ynh_script_progression --message="Configuring SSOwat..."

# Make app public if necessary
if [ $is_public -eq 1 ]
then
	ynh_app_setting_set --app=$app --key=skipped_uris --value="/"
fi

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading NGINX web server..."

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --last
